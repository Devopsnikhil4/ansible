- name: Copy the {{ COMPONENT }} repo
  ansible.builtin.copy:
    src: mysql.repo
    dest: /etc/yum.repos.d/{{COMPONENT}}.repo

- name: Installing {{ COMPONENT }}
  ansible.builtin.yum:
    name: 
      - mysql-community-server
      - python3-PyMySQL
      - MySQL-python
    state: present

- name: starting {{ COMPONENT }}
  ansible.builtin.systemd:
    name: mysqld
    state: started
    enabled: true


- name: validate the default password
  block: 
    - name: Get MySQL version with non-default credentials
      community.mysql.mysql_info:
        login_user: root
        login_password: Roboshop@1
        filter: version  
  rescue:
    - name: Fetch the log file from the rmot note
      ansible.builtin.slurp:
        src: /var/log/mysqld.log
      register: mysql_pwd_log   
      
    - name: Grep the password and assign it to a variable
      ansible.builtin.set_fact:
          DEFAULT_PASSWORD: "{{ mysql_pwd_log['content'] | b64decode | regex_findall('.*temporary password.*')| join(' ') |split(' ') | last }}"

    - name: Rest Default {{COMPONENT}} Default root password
      ansible.builtin.shell: echo "ALTER USER 'root'@'localhost' IDENTIFIED BY "{{ROOT_PASSWORD}}";" | mysql --connect-expired-password -uroot -p"{{DEFAULT_PASSWORD}}"

    - name: Uninstalling  {{ COMPONENT }} password validate plugin
      ansible.builtin.shell: echo "UNINSTALL PLUGIN validate_password;" | mysql -uroot -pRoboShop@1
      ignore_errors: yes

- name: Download and extracting the {{ COMPONENT }} schema
  ansible.builtin.include_role:
    name: common
    tasks_from: download

- name: Try to create database as root/nopassword first. If not allowed, pass the credentials
  community.mysql.mysql_db:
    state: import
    name: all
    target: /tmp/{{ COMPONENT }}-main/shipping.sql
    login_user: root
    login_password: Roboshop@1
 
- name: configuring Node Name Repo
  ansible.builtin.shell: set-hostname {{COMPONENT}}-{{ENV}}     
